import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }

    configurations.all {
        resolutionStrategy {
            force 'commons-io:commons-io:2.4'
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.8.1'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

def rootVersion = "1.14"
def revision = ""
def  buildNumber = ""
def date = ""
ext {
    git = Grgit.open(dir: new File(rootDir.toString()+'/.git'))
    date = git.head().getDate().format("yy.MM.dd")
    revision = "-${git.head().abbreviatedId}"
    parents = git.head().parentIds;
    if (project.hasProperty('buildnumber')) {
        buildNumber = "$buildnumber"
    } else {
        index = -2109;  // Offset to match CI
        for (; parents != null && !parents.isEmpty(); index++) {
            parents = git.getResolve().toCommit(parents.get(0)).getParentIds()
        }
        buildNumber = "${index}"
    }
}

version = String.format("%s-%s", rootVersion, buildNumber)

repositories {
    mavenCentral()
    maven { url 'https://ci.athion.net/job/FastAsyncWorldEdit-1.14/ws/mvn' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://repo.maven.apache.org/maven2" }
    // Fawe
    maven { url "https://mvnrepository.com/artifact/" }
    maven { url "https://repo.destroystokyo.com/repository/maven-public//" }
    mavenLocal()
    maven { url "http://empcraft.com/maven2" }
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url "http://maven.sk89q.com/artifactory/repo" }
    maven { url "http://ci.emc.gs/nexus/content/groups/aikar/" }
    ivy {
        url 'https://ci.athion.net/job'
        layout 'pattern', {
            artifact '/[organisation]/[module]/artifact/[revision].[ext]'
        }
    }
}

dependencies {
    compile 'com.boydti:fawe-api:latest'
    compile 'com.martiansoftware:jsap:2.1'
    compile 'com.destroystokyo.paper:paper-api:1.14.4-R0.1-SNAPSHOT'
    implementation('io.papermc:paperlib:1.0.2'){transitive = false}
    compile 'org.spigotmc:spigot:1.13.2-R0.1-SNAPSHOT'
    compile 'BuildTools:lastSuccessfulBuild:spigot-1.14.4@jar'
    implementation('com.thevoxelbox.voxelsniper:voxelsniper:5.171.0'){transitive = false}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

processResources {
    from('src/main/resources') {
        include 'plugin.yml'
        expand(
                name: project.name,
                version: project.version
        )
    }
}

clean.doFirst {
    delete "../target"
}

shadowJar {
    dependencies {
        include(dependency('com.martiansoftware:jsap:2.1'))
    }
    archiveName = "FastAsyncVoxelSniper-${project.name}-${project.version}.jar"
    destinationDir = file '../target'
}

build.dependsOn(shadowJar)

task aggregatedJavadocs(type: Javadoc, description: 'Generate javadocs from all child projects as if it was a single project', group: 'Documentation') {
    destinationDir = file("./docs/javadoc")
    title = "$project.name $version API"
    options.author true
    options.links 'http://docs.spring.io/spring/docs/4.3.x/javadoc-api/', 'http://docs.oracle.com/javase/8/docs/api/', 'http://docs.spring.io/spring-ws/docs/2.3.0.RELEASE/api/', 'http://docs.spring.io/spring-security/site/docs/4.0.4.RELEASE/apidocs/'
    options.addStringOption('Xdoclint:none', '-quiet')

    delete "./docs"

    subprojects.each { proj ->
        proj.tasks.withType(Javadoc).each { javadocTask ->
            source += javadocTask.source
            classpath += javadocTask.classpath
            excludes += javadocTask.excludes
            includes += javadocTask.includes
        }
    }
}
